# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: atlassian/confluence-server:6.15.9-alpine
  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

expose:
  # Set the way how to expose the service. Set the type as "ingress","clusterIP","loadBalancer"
  # or "nodePort" and fill the information in the corresponding section
  type: ingress
  ingress:
    enabled: true
    tls:
      enabled: false
      # Fill the name of secret if you want to use your own TLS certificate
      # and private key. The secret must contain keys named tls.crt and
      # tls.key that contain the certificate and private key to use for TLS
      # The certificate and private key will be generated automatically if
      # it is not set
      secretName: ""
    host: confluence.example.com
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
      # kubernetes.io/tls-acme: "true"
  clusterIP:
    ports:
      - name: http
        port: 8090
        targetPort: 8090
  nodePort:
    ports:
      - name: http
        port: 8090
        targetPort: 8090
        #nodePort: 38090
  loadBalancer:
    annotations: []
    ports:
      - name: http
        port: 8090
        targetPort: 8090


## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
persistence:
  enabled: false

  ## A manually managed Persistent Volume and Claim
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  # existingClaim:

  ## rabbitmq data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  accessMode: ReadWriteOnce
  size: 5Gi

extraContainers: |

## additional volumes, e. g. for secrets used in an extraContainers.
extraVolumes: |

securityContext: {}
  #runAsUser: 0

resources: 
  limits:
    cpu: 2
    memory: 4Gi
  requests:
    cpu: 2
    memory: 4Gi

nodeSelector: {}

tolerations: []

affinity: {}
