deployment:
  enabled: true

affinity: {}

commonResources:
  limits:
    cpu: 2
    memory: 4Gi
  requests:
    cpu: 2
    memory: 4Gi

replicas: 1

container:
  httpPort: 8080
  imagePullPolicy: Always
  repository: atlassian/jira-software:8.3.3
  runAsUser: 0

## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  enabled: true

  ## A manually managed Persistent Volume and Claim
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  # existingClaim:

  ## rabbitmq data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  accessMode: ReadWriteOnce
  size: 5Gi

probe:
  enabled: true
  httpGet:
    path: /
    port: 8080
  liveness:
    initialDelaySeconds: 90
    periodSeconds: 30
    timeoutSeconds: 30
  readinesse:
    initialDelaySeconds: 90
    periodSeconds: 30
    timeoutSeconds: 30
  tcpSocket:
    port: 8080
  type: httpGet

service:
  enabled: true
  type: NodePort

ingress:
  enabled: true
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - jira.k8sre.com
  hosts: 
    - host: jira.k8sre.com