
Get the application URL by running these commands:
{{- if contains "ingress" .Values.expose.type  }}
  http{{ if $.Values.expose.ingress.tls.enabled }}s{{ end }}://{{ .Values.expose.ingress.host }}
{{- else if contains "nodePort" .Values.expose.type }}
  export NODE_PORT=$(kubectl get -n {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "app.fullname" . }})
  export NODE_IP=$(kubectl get nodes -n {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "loadBalancer" .Values.expose.type }}
  NOTE: It may take a few minutes for the LoadBalancer IP to be available.
    You can watch the status of by running 'kubectl get -n {{ .Release.Namespace }} svc -w {{ include "app.fullname" . }}'
  
  export SERVICE_IP=$(kubectl get svc -n {{ .Release.Namespace }} {{ include "app.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.expose.loadBalancer.port }}
{{- else if contains "clusterIP" .Values.expose.type }}
  export POD_NAME=$(kubectl get pods -n {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "app.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  kubectl -n {{ .Release.Namespace }} port-forward $POD_NAME {{ .Values.expose.clusterIP.ports.http }}:{{ .Values.expose.clusterIP.ports.http }}
  echo "http://127.0.0.1:{{ .Values.expose.clusterIP.ports.http }}"
{{- end }}